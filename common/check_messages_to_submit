#!/usr/bin/env python3
# Copyright European Organization for Nuclear Research (CERN) 2013
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Mario Lassnig, <mario.lassnig@cern.ch>, 2013-2014
# - Thomas Beermann, <thomas.beermann@cern.ch>, 2019
# - Eric Vaandering, <ewv@fnal.gov>, 2022
# - Maggie Voetberg, <maggiev@fnal.gov>, 2024

"""
Probe to check the queues of messages to submit by Hermes to the broker
"""

import sys
from sqlalchemy.sql import text as sql_text

from rucio.db.sqla.session import BASE, get_session
from utils.common import PrometheusPusher

# Exit statuses
OK, WARNING, CRITICAL, UNKNOWN = 0, 1, 2, 3

if BASE.metadata.schema:
    schema = BASE.metadata.schema + '.'
else:
    schema = ''

queue_sql = """SELECT COUNT(*) FROM {schema}messages""".format(schema=schema)

if __name__ == "__main__":
    try:
        session = get_session()
        with PrometheusPusher() as manager:
            result = session.execute(sql_text(queue_sql)).fetchall()
            message_count = result[0][0]
            print(f"Messages in queue: {message_count}")

            manager.gauge(
                "messages_to_submit.queues.messages", 
                documentation="Messages in queue, to submit"
                ).set(message_count)

        if message_count > 100000:
            sys.exit(WARNING)
        elif message_count > 1000000:
            sys.exit(CRITICAL)

    except Exception as e:
        print(f"Error: {e}")
        sys.exit(UNKNOWN)
    sys.exit(OK)
