#!/usr/bin/env python3
# Copyright European Organization for Nuclear Research (CERN) 2013
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Mario Lassnig, <mario.lassnig@cern.ch>, 2013-2014
# - Thomas Beermann, <thomas.beermann@cern.ch>, 2019
# - Eric Vaandering <ewv@fnal.gov>, 2022

"""
Probe to check the queues of messages to submit by Hermes to the broker
"""

import sys


from prometheus_client import CollectorRegistry, Gauge
from rucio.core import monitor
from rucio.db.sqla.session import BASE, get_session

from utils import common

PrometheusPusher = common.PrometheusPusher


# Exit statuses
OK, WARNING, CRITICAL, UNKNOWN = 0, 1, 2, 3

if BASE.metadata.schema:
    schema = BASE.metadata.schema + '.'
else:
    schema = ''

queue_sql = """SELECT COUNT(*) FROM {schema}messages""".format(schema=schema)

if __name__ == "__main__":
    try:
        registry = CollectorRegistry()
        session = get_session()
        with PrometheusPusher(registry, job_name='check_messages_to_submit') as prometheus_config:
            prefix: str = prometheus_config['prefix']
            result = session.execute(queue_sql).fetchall()
            print('queues.messages %s' % result[0][0])
            monitor.record_gauge(stat='queues.messages', value=result[0][0])
            Gauge(prefix + 'hermes_queues_messages', '', registry=registry).set(result[0][0])


        if result[0][0] > 100000:
            sys.exit(WARNING)
        elif result[0][0] > 1000000:
            sys.exit(CRITICAL)

    except Exception as e:
        sys.exit(UNKNOWN)
    sys.exit(OK)
