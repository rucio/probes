#!/usr/bin/env python3
# Copyright European Organization for Nuclear Research (CERN) since 2012
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Probe to check the backlog of dids waiting for rule evaluation.
"""

import sys

from prometheus_client import CollectorRegistry, Gauge, push_to_gateway
from sqlalchemy import func, select

from rucio.common.config import config_get_list
from rucio.db.sqla import models
from rucio.db.sqla.session import get_session

from utils.common import probe_metrics

# Exit statuses
OK, WARNING, CRITICAL, UNKNOWN = 0, 1, 2, 3

count_sql = select(
    func.count()
).select_from(
    models.UpdatedDID
)

PROM_SERVERS = config_get_list('monitor', 'prometheus_servers', raise_exception=False, default=[])

if __name__ == "__main__":
    try:
        session = get_session()
        result = session.execute(count_sql).scalar_one()
        probe_metrics.gauge(name='judge.waiting_dids').set(result)

        registry = CollectorRegistry()
        Gauge('judge_waiting_dids', '', registry=registry).set(result)

        for server in PROM_SERVERS:
            try:
                push_to_gateway(server.strip(), job='check_unevaluated_dids', registry=registry)
            except:
                continue

        print(result)
    except:
        sys.exit(UNKNOWN)
    sys.exit(OK)
