#!/usr/bin/env python3
# Copyright European Organization for Nuclear Research (CERN) since 2012
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Probe to check the backlog of unlocked replicas.
"""

import sys
from datetime import datetime
import traceback
from sqlalchemy import func, select, null, and_

from rucio.db.sqla import models
from rucio.db.sqla.session import get_session

from utils.common import PrometheusPusher

# Exit statuses
OK, WARNING, CRITICAL, UNKNOWN = 0, 1, 2, 3

if __name__ == "__main__":
    try:
        session = get_session()
        base_statement =  select(
            func.count()
        ).select_from(
            models.RSEFileAssociation
        )
        # Expired replicas 
        statement = base_statement.where(
            and_(
                models.RSEFileAssociation.tombstone != null(),
                models.RSEFileAssociation.tombstone < datetime.utcnow()
            )
        )
        expired_replicas = session.execute(statement).scalar_one()
        
        # Unlocked replicas
        statement = base_statement.where(
            models.RSEFileAssociation.tombstone != null()
        )
        unlocked_replicas = session.execute(statement).scalar_one()

        with PrometheusPusher() as manager:
            manager.gauge("reaper.expired_replicas").set(expired_replicas)
            manager.gauge("reaper.unlocked_replicas").set(unlocked_replicas)
    except Exception:
        print(traceback.format_exc())
        sys.exit(UNKNOWN)
    sys.exit(OK)
