#!/usr/bin/env python3
# Copyright European Organization for Nuclear Research (CERN) 2013
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Vincent Garonne, <vincent.garonne@cern.ch>, 2013
# - Thomas Beermann, <thomas.beermann@cern.ch>, 2019
# - Eric Vaandering <ewv@fnal.gov>, 2020-2022
# - Maggie Voetberg <maggiev@fnal.gov>, 2024

"""
Probe to check the backlog of expired dids.
"""
from __future__ import print_function
import sys
import traceback
from datetime import datetime
from sqlalchemy import func

from rucio.db.sqla import models
from rucio.db.sqla.session import get_session

from utils.common import PrometheusPusher


# Exit statuses
OK, WARNING, CRITICAL, UNKNOWN = 0, 1, 2, 3

if __name__ == "__main__":
    try:
        session = get_session()
        with PrometheusPusher() as manager:
            
            query = (session.query(func.count(models.DataIdentifier.scope))
                           .filter(models.DataIdentifier.expired_at.isnot(None),
                                   models.DataIdentifier.expired_at < datetime.utcnow()))
            result = query.scalar() or 0
            # Possible check against a threshold. If result > max_value then sys.exit(CRITICAL)

            manager.gauge('expired_dids.total',
                          documentation="All expired dids"
                          ).set(result)

    except:
        print(traceback.format_exc())
        sys.exit(UNKNOWN)
    sys.exit(OK)
