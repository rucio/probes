#!/usr/bin/env python3
# Copyright European Organization for Nuclear Research (CERN) since 2012
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Probe to check the number of expiring rules.
"""
import sys
import traceback

from rucio.db.sqla.session import BASE, get_session

from utils import common

PrometheusPusher = common.PrometheusPusher

# Exit statuses
OK, WARNING, CRITICAL, UNKNOWN = 0, 1, 2, 3

if BASE.metadata.schema:
    schema = BASE.metadata.schema + '.'
else:
    schema = ''

if __name__ == "__main__":
    try:
        session = get_session()
        with PrometheusPusher() as manager:
            sql = 'SELECT rse_expression, count(*) from {schema}RULES where expires_at is not null group by rse_expression'.format(schema=schema)
            result = session.execute(sql).fetchall()
            for rse, count_files in result:
                (manager.gauge(name='judge.expiring_rules_number.{dst_rse}',
                               documentation='The number of expiring rules at an RSE')
                        .labels(dst_rse=rse).set(count_files))

    except:
        print(traceback.format_exc())
        sys.exit(UNKNOWN)
    sys.exit(OK)
