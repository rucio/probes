#!/usr/bin/env python3
# Copyright European Organization for Nuclear Research (CERN) since 2012
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import json
import sys
import traceback

import requests

from rucio.client import Client
from rucio.common.config import config_get
from rucio.common.exception import RSENotFound


UNKNOWN = 3
CRITICAL = 2
WARNING = 1
OK = 0

if __name__ == '__main__':

    try:
        PROXY = config_get('nagios', 'proxy')
    except Exception as error:
        print(error)
        print("Failed to get proxy from rucio.cfg")
        sys.exit(CRITICAL)

    url = 'https://atlas-cric.cern.ch/api/atlas/ddmendpoint/query/?json&state=ANY&site_state=ANY&rcsite_state=ANY'
    resp = requests.get(url=url, verify='/etc/pki/tls/certs/ca-bundle.crt', cert=PROXY)
    data = json.loads(resp.content)
    retvalue = OK
    cric_rses = []

    client = Client()
    for rse in data.values():
        if rse['name'] not in cric_rses:
            cric_rses.append(rse['name'])
        notify = False
        if rse['state'] == 'DISABLED' or rse['site_state'] == 'DISABLED':
            notify = True
        if notify:
            try:
                client.get_rse(rse['name'])
                print('%s needs to be deleted' % (rse['name']))
                retvalue = CRITICAL
            except RSENotFound:
                # Site is already deleted. Skip
                pass
            except Exception:
                trcbck = traceback.format_exc()
                errno, errstr = sys.exc_info()[:2]
                print('Interrupted processing with %s %s %s.' % (errno, errstr, trcbck))
    for rse in client.list_rses():
        if rse['rse'] not in cric_rses:
            rse_attr = client.list_rse_attributes(rse['rse'])
            if not ('is_stagingarea' in rse_attr and rse_attr['is_stagingarea']):
                print('%s is not defined in CRIC !!!' % (rse['rse']))
                retvalue = CRITICAL

    sys.exit(retvalue)
